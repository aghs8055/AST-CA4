/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 05 07:24:40 GMT 2024
 */

package ir.ramtung.impl2;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ir.ramtung.impl2.Library;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Library library0 = new Library();
      library0.timePass(0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("3?g^sI.ZF", (-1184662360));
      try { 
        library0.borrow("3?g^sI.ZF", "3?g^sI.ZF");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // this book doesnt exist
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("}-V(Yg||>>s", 1390, 0, 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s number is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("AU]aRQW", 0, 0, (-381));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s year is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("student name is empty");
      // Undeclared exception!
      library0.timePass(5000);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("ir.ramtung.impl2.Book", 3017);
      library0.addStudentMember("ir.ramtung.impl2.Document", "I?uH.k&g&SNTL\"n");
      library0.borrow("I?uH.k&g&SNTL\"n", "Rb&T");
      try { 
        library0.extend("I?uH.k&g&SNTL\"n", "this book doesnt exist");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cant extend
         //
         verifyException("ir.ramtung.impl2.Person", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addStudentMember("`", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addReference((String) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addProfMember((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addMagazine((String) null, (-619), (-619), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Library library0 = new Library();
      // Undeclared exception!
      try { 
        library0.addBook((String) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.timePass((-547));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // days cant be negative
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("ir.ramtung.impl2.Book", 3017);
      List<String> list0 = library0.availableTitles();
      assertTrue(list0.contains("ir.ramtung.impl2.Book"));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("8", (-3193));
      List<String> list0 = library0.availableTitles();
      assertFalse(list0.contains("8"));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("7");
      int int0 = library0.getTotalPenalty("7");
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("8");
      int int0 = library0.getTotalPenalty((String) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("7");
      library0.returnDocument("8", "9U__&)jbhcQv&Kb6,");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("8");
      library0.returnDocument("8", "9U__&)jbhcQv&Kb6,");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("O", "S");
      library0.extend("R", "R");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("R", "O");
      // Undeclared exception!
      try { 
        library0.borrow("O", "S");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 0, Size: 0
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("R");
      library0.borrow("O", "S");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("ir.ramtung.impl2.Document", 0);
      try { 
        library0.borrow("ir.ramtung.impl2.Document", "ir.ramtung.impl2.Document");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // this book doesnt exist
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("S", 361);
      library0.borrow("O", "S");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("!", 2650, 2650, 2650);
      try { 
        library0.addReference("!", 2650);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the reference has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("R", 361, 361, 361);
      library0.addReference("S", 361);
      library0.borrow("O", "S");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addReference(" ", 540);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // reference name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("", (-2799), (-2799), (-2799));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s year is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("cant ext9&e nd", 1409);
      try { 
        library0.addMagazine("cant ext9&e nd", 1409, 1409, 1409);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the magazine has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("8", (-3193));
      try { 
        library0.addMagazine("9U__&)jbhcQv&Kb6,", 7000, (-2099), (-2099));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine`s number is incorrect
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine(" ", (-26), (-26), (-26));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // magazine name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine("", 611, 732, (-2269));
      try { 
        library0.addBook("", (-1));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the book has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("8", (-3193));
      library0.addBook("7", 0);
      library0.borrow("8", "9U__&)jbhcQv&Kb6,");
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addBook(" ", (-25));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // book name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("7", 0);
      List<String> list0 = library0.availableTitles();
      assertFalse(list0.contains("7"));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("");
      try { 
        library0.addProfMember("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the member has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("8");
      library0.addProfMember("7");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addProfMember(" ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // prof name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("R");
      library0.addStudentMember("O", "S");
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("N", "N");
      try { 
        library0.addStudentMember("N", "N");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // the member has already added
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addStudentMember("5", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // student name is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addStudentMember("", "");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // student id is empty
         //
         verifyException("ir.ramtung.impl2.Library", e);
      }
  }
}
